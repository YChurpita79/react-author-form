'use strict';

var fs = require('fs');
var path = require('path');
var ts = require('typescript');
module.exports = function (data) {
  var _this = this;

  this.cacheable();
  if (!/\.(css|scss)/.test(data)) {
    console.log('no css - XXXXXX');

    return data;
  }
  console.log('match css - XXXXXX');
  console.time('asd');
  var callback = this.async();
  var sourceFile = ts.createSourceFile('', data);
  sourceFile.statements.forEach(function (statement) {
    if (statement.kind === ts.SyntaxKind.ImportDeclaration) {
      // console.log(this.resourcePath);
      // console.log(statement.moduleSpecifier.text);
      var filename = path.resolve(_this.context, statement.moduleSpecifier.text) + '.d.ts';

      var childCompiler = _this._compilation.createChildCompiler("extract-text-webpack-plugin", {
        filename: filename
      });
      childCompiler.plugin("after-compile", function (compilation, callback) {
        console.log(compilation);
        callback();
      });

      childCompiler.runAsChild(function (err, entries, compilation) {
        console.log(err);
        console.log(entries);
        console.log(compilation);
        callback();
      });

      _this.addDependency(filename);
      try {
        fs.accessSync(filename, fs.F_OK);
      } catch (e) {
        var x = "export interface IExampleCss {\
  [key: string]: any;\
}\
declare const styles: IExampleCss;\
\
export default styles;\
";
        fs.writeFileSync(filename, x);
      }
    }
  });
  console.timeEnd('asd');
  return data;
};